//## Typefaces
//
//We expose four sets of type families for use in Calcite Web; a Header Family, a Body Family, a Secondary Family, and a Code Family. Each of these type families have a set of weights and styles, defined by their application. For example, the Header Family has more weights than the Body family, reflecting its role as primary UI face, and heavy lifting header face.
//The typographic pallete for Calcite Web differs slightly from the official Esri branding document. All typefaces are examined in detail below.
//Calcite Web provides a set of weights for each typeface. These are used by either using the helper class in html, or the writing sass to include the mixin, or extending the helper class. The available weights for each face are below. Proper care has been taken to ensure that all type systems used by Calcite avoid faux-bold and faux-italics styled by the browser.
//
// No Modifiers
//
//Styleguide x.x


//## Header Face
//
//[Avenir Next](http://www.fonts.com/font/linotype/avenir-next) is a recut of the classic Avenir typeface, by Adrian Frutiger and Akira Kobayashi. It has been reworked for use on the web, and contains more weights, styles, and other improvements. Avenir Next improves on Avenir in specifically web settings.
// Applies the the header face, along with a set of smart weight interactions and typographic defaults, to an element.
//
//.header-light             - Avenir Next Light 300
//.header-light-italic      - Avenir Next Light Italic 300
//.header-face              - Avenir Next Regular 400
//.header-face-italic       - Avenir Next Regular Italic 400
//.header-demi              - Avenir Next Semi-Bold 500
//.header-demi-italic       - Avenir Next Semi-Bold Italic 500
//.header-bold              - Avenir Next Bold 600
//.header-bold-italic       - Avenir Next Bold Italic 600
//
//Styleguide x.x

//## Header Face Sass
//
// Including header typeface mixins in custom SASS styles will have the same effect including the classname in your markdown, or extending the class.
//
//@include header-light()             - .header-light
//@include header-light-italic()      - .header-light-italic
//@include header-face()              - .header-face
//@include header-face-italic()       - .header-face-italic
//@include header-demi()              - .header-demi
//@include header-demi-italic()       - .header-demi-italic
//@include header-bold()              - .header-bold
//@include header-bold-italic()       - .header-bold-italic
//
//Styleguide x.x

@mixin header-light() {
  @include tracking($header-tracking);
  font-family: $header-family; font-weight: nth($header-light, 1); font-style: normal;
  b, strong {font-weight: nth($header-light, 2);}
}
@mixin header-light-italic() {
  @include tracking($header-tracking);
  font-family: $header-family; font-weight: nth($header-light, 1); font-style: italic;
  b, strong {font-weight: nth($header-light, 2);}
}
@mixin header-face() {
  @include tracking($header-tracking);
  font-family: $header-family; font-weight: nth($header-regular, 1); font-style: normal;
  b, strong {font-weight: nth($header-regular, 2);}
}
@mixin header-italic() {
  @include tracking($header-tracking);
  font-family: $header-family; font-weight: nth($header-regular, 1); font-style: italic;
  b, strong {font-weight: nth($header-regular, 2);}
}
@mixin header-demi() {
  @include tracking($header-tracking);
  font-family: $header-family; font-weight: nth($header-demi, 1); font-style: normal;
  b, strong {font-weight: nth($header-demi, 2);}
}
@mixin header-demi-italic() {
  @include tracking($header-tracking);
  font-family: $header-family; font-weight: nth($header-demi, 1); font-style: italic;
  b, strong {font-weight: nth($header-demi, 2);}
}
@mixin header-bold() {
  @include tracking($header-tracking);
  font-family: $header-family; font-weight: nth($header-bold, 1); font-style: normal;
  b, strong {font-weight: nth($header-bold, 2);}
}
@mixin header-bold-italic() {
  @include tracking($header-tracking);
  font-family: $header-family; font-weight: nth($header-bold, 1); font-style: italic;
  b, strong {font-weight: nth($header-bold, 2);}
}


//## Body Face
//
// While there is no official Esri brand typeface for long for applications, Calcite Web employs [Frutiger](http://www.fonts.com/font/linotype/frutiger?QueryFontType=Web) for this purpose. Frutiger evokes some of the stronger qualities of our default typefaces - Lucida Grande and Segoe UI - while presenting a consistent voice across platforms. Frutiger pairs remarkably well with Avenir, as they are both designed by Adrian Frutiger, with strong influences from Univers.
//
//.body-face                - Frutiger Regular 400
//.body-italic              - Frutiger Regular Italic 400
//.body-bold                - Frutiger Bold 700
//.body-bold-italic         - Frutiger Bold Italic 700
//
// Styleguide x.x

//## Body Face Sass
//
// Including body typeface mixins in custom SASS styles will have the same effect including the classname in your markdown, or extending the class.
//
//@include body-face()              - .body-face
//@include body-face-italic()       - .body-face-italic
//@include body-bold()              - .body-bold
//@include body-bold-italic()       - .body-bold-italic
//
//Styleguide x.x

@mixin body-face() {
  @include tracking($body-tracking);
  font-family: $body-family; font-weight: nth($body-regular, 1); font-style: normal;
  b, strong {font-weight: nth($body-regular, 2);}
}
@mixin body-italic() {
  @include tracking($body-tracking);
  font-family: $body-family; font-weight: nth($body-regular, 1); font-style: italic;
  b, strong {font-weight: nth($body-regular, 2);}
}
@mixin body-bold() {
  @include tracking($body-tracking);
  font-family: $body-family; font-weight: nth($body-bold, 1); font-style: normal;
  b, strong {font-weight: nth($body-bold, 2);}
}
@mixin body-bold-italic() {
  @include tracking($body-tracking);
  font-family: $body-family; font-weight: nth($body-bold, 1); font-style: italic;
  b, strong {font-weight: nth($body-bold, 2);}
}

//## Secondary Face
//
// [ITC Charter](http://www.fonts.com/font/itc/itc-charter), designer by Mathew Carter, is used as a Serif alternative to the sans-serif body face. While usage should be sparse, Charter provides the opportunity to add variation and contrast to a pages pallete.
//
//.secondary-face           - ITC Charter Medium 400
//.secondary-italic         - ITC Charter Medium Italic 400
//.secondary-bold           - ITC Charter Bold 700
//.secondary-bold-italic    - ITC Charter Bold Italic 700
//
// Styleguide x.x

//## Seconday Face Sass
//
// Including secondary typeface mixins in custom SASS styles will have the same effect including the classname in your markdown, or extending the class.
//
//@include secondary-face()              - .secondary-face
//@include secondary-face-italic()       - .secondary-face-italic
//@include secondary-bold()              - .secondary-bold
//@include secondary-bold-italic()       - .secondary-bold-italic
//
//Styleguide x.x

@mixin secondary-face() {
  @include tracking($secondary-tracking);
  font-family: $secondary-family; font-weight: nth($secondary-regular, 1); font-style: normal;
  b, strong {font-weight: nth($secondary-regular, 2);}
}
@mixin secondary-italic() {
  @include tracking($secondary-tracking);
  font-family: $secondary-family; font-weight: nth($secondary-regular, 1); font-style: italic;
  b, strong {font-weight: nth($secondary-regular, 2);}
}
@mixin secondary-bold() {
  @include tracking($secondary-tracking);
  font-family: $secondary-family; font-weight: nth($secondary-bold, 1); font-style: normal;
  b, strong {font-weight: nth($secondary-bold, 2);}
}
@mixin secondary-bold-italic() {
  @include tracking($secondary-tracking);
  font-family: $secondary-family; font-weight: nth($secondary-bold, 1); font-style: italic;
  b, strong {font-weight: nth($secondary-bold, 2);}
}


//## Code Face
//
// Designed by Microsoft's Lucas DeGroot, [Consolas](http://www.fonts.com/font/microsoft-corporation/consolas) is a clean, readable, and simple monospace face for documenting code blocks.
//
//.code-face                - Consolas 400
//
// Styleguide x.x

//## Code Face Sass
//
// Including code typeface mixins in custom SASS styles will have the same effect including the classname in your markdown, or extending the class.
//
//@include code-face()              - .code-face
//
//Styleguide x.x

@mixin code-face() {
  @include tracking($code-tracking);
  font-family: $code-family; font-weight: nth($code-regular, 1); font-style: normal;
  b, strong {font-weight: nth($code-regular, 2);}
}
@mixin code-italic() {
  @include tracking($code-tracking);
  font-family: $code-family; font-weight: nth($code-regular, 1); font-style: italic;
  b, strong {font-weight: nth($code-regular, 2);}
}

@if $include-type == true {
  // ┌────────────────┐
  // │ Header Classes │
  // └────────────────┘

  @if $include-header-family == true {
    .header-light {@include header-light();}
    .header-light-italic {@include header-light-italic();}
    .header-face {@include header-face();}
    .header-italic {@include header-italic();}
    .header-demi {@include header-demi();}
    .header-demi-italic {@include header-demi-italic();}
    .header-bold {@include header-bold();}
    .header-bold-italic {@include header-bold-italic();}
  }

  // ┌──────────────┐
  // │ Body Classes │
  // └──────────────┘
  @if $include-body-family == true {
    .body-face {@include body-face();}
    .body-italic {@include body-italic();}
    .body-bold {@include body-bold();}
    .body-bold-italic {@include body-bold-italic();}
  }

  // ┌───────────────────┐
  // │ Secondary Classes │
  // └───────────────────┘
  @if $include-secondary-family == true {
    .secondary-face {@include secondary-face();}
    .secondary-italic {@include secondary-italic();}
    .secondary-bold {@include secondary-bold();}
    .secondary-bold-italic {@include secondary-bold-italic();}
  }

  // ┌──────────────┐
  // │ Code Classes │
  // └──────────────┘
  @if $include-header-family == true {
    .code-face {@include code-face();}
    .code-italic {@include code-italic();}
  }
}