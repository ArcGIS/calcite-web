// ┌─────────┐
// │ Buttons │
// └─────────┘
//  ↳ http://esri.github.io/calcite-web/components/#buttons
//  ↳ components → _buttons.md

@mixin btn() {
  position: relative;
  display: inline-block;
  padding: $baseline/5 .9rem;
  width: auto;
  color: $white;
  border: 1px solid $dark-blue;
  background-color: $blue;
  @include box-sizing(border-box);
  @include transition(all 0.05s linear);
  @include font-size(0);
  cursor: pointer;
  white-space: nowrap;
  @if $include-type {
    font-family: $header-family;
  }
  &:hover, &:focus {
    background-color: $dark-blue;
    color: $white;
  }
}

  @mixin btn-disabled() {
    background-color: $off-white;
    border-color: $lightest-gray;
    cursor: default;
    pointer-events: none;
    color: $gray;
    &:hover {
      background-color: $light-gray;
      color: $gray;
    }
  }

  @mixin btn-arrow() {
    &:after {
      content: " →";
    }
  }

  @mixin btn-transparent() {
    background: none;
    color: $link-color;
    border: none;
    &:hover {
      color: $link-hover;
      background: none;
    }
    &.btn-disabled {
      background: none;
      color: $gray;
      &:hover {
        color: $gray;
        background: none;
      }
    }
  }

  @mixin btn-clear() {
    color: $blue;
    background: transparent;
    border-color: $blue;
    &:hover {
      color: $white;
      background: $dark-blue;
      border-color: $dark-blue;
    }
  }

    @mixin btn-clear-gray() {
      background: none;
      color: $dark-gray;
      border-color: $dark-gray;
      &:hover {
        color: $white;
        background: $gray;
      }
    }
    @mixin btn-clear-white() {
      background: none;
      color: $white;
      border: 1px solid $white;
      &:hover {
        color: $gray;
        background: $white;
      }
    }

  @mixin btn-small() {
    @include font-size(-2);
    padding: $baseline/5*.75 .9rem*.75;
  }

  @mixin btn-large() {
    @include font-size(1);
    padding: .5rem 1rem .5rem;
  }

  @mixin btn-fill() {
    width: 100%;
    text-align: center;
  }

  @mixin btn-grouped() {
    float: left;
    & + .btn-grouped {
      border-left: none;
    }
    &:last-of-type {
      float: none;
    }
  }

  @mixin btn-color($value, $dark-value) {
    background-color: $value;
    border-color: $dark-value;
    &:hover {
      background-color: $dark-value;
    }
  }


@if $include-button == true {
  .btn             { @include btn();}
  .btn-arrow       { @include btn-arrow();}
  .btn-transparent { @include btn-transparent();}
  .btn-clear       { @include btn-clear();}
  .btn-clear-gray  { @include btn-clear-gray();}
  .btn-clear-white { @include btn-clear-white();}
  .btn-small       { @include btn-small();}
  .btn-large       { @include btn-large();}
  .btn-fill        { @include btn-fill();}
  .btn-grouped     { @include btn-grouped();}
  .btn-red         { @include btn-color($red, $dark-red);}
  .btn-green       { @include btn-color($green, $dark-green);}
  .btn-blue        { @include btn-color($blue, $dark-blue);}
  .btn-purple      { @include btn-color($purple, $dark-purple);}
  .btn-orange      { @include btn-color($orange, $dark-orange);}
  .btn-brown       { @include btn-color($brown, $dark-brown);}
  .btn-white       { @include btn-color($white, $lightest-gray);}
  .btn-light-gray  { @include btn-color($light-gray, $gray);}
  .btn-gray        { @include btn-color($gray, $dark-gray);}
  .btn-dark-gray   { @include btn-color($dark-gray, $darker-gray);}
  .btn-darker-gray { @include btn-color($darker-gray, $darkest-gray);}
  .btn-darkest-gra { @include btn-color($darkest-gray, $off-black);}
  .btn-off-black   { @include btn-color($off-black, $black);}


  .btn:disabled, .btn-disabled, button[disabled] {@include btn-disabled();}
}

